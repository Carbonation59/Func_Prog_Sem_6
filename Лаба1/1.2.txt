// Define functions to solve algebraic equations

let eps = 1e-6

//dihotomy

let rec dichotomy f a b =         
    if (abs (b - a)) > eps then
        let c = (a + b) / 2.
        if (f a) * (f c) < 0. then
            dichotomy f a c
        else 
            dichotomy f c b
    else 
        (a + b) / 2.

//iterations

let rec iterations phi x = 
    if (abs ((phi x) - x)) > eps then
        iterations phi (phi x)
    else
        phi x

//newton

let phi_n f f' x = x - f(x) / f'(x)

let newthon f f' x = iterations (phi_n f f') x

//functions

let f1 x = 0.25 * x * x * x + x - 1.2502
let f2 x = x + (sqrt x) + x ** (1. / 3.) - 2.5
let f3 x = x - (1. / (3. + (sin (3.6 * x))))

let f1' x = (0.75 * x * x + 1.)
let f2' x = (1. + 1. / (2. * (sqrt x)) + 1. / (3. * x ** (2. / 3.)))
let f3' x = (1. - 18. * (cos (3.6 * x)) / (5. * (sin (3.6 * x)) * (sin (3.6 * x)) + 30. * (sin (3.6 * x)) + 45.))

let max_f1' = 4.
let max_f2' = 2.405
let max_f3' = 1.378

let phi1 x = x - (f1 x) / max_f1'
let phi2 x = x - (f2 x) / max_f2'
let phi3 x = x - (f3 x) / max_f3'

// Solve 3 equations using three methods defined above

let main = 
    let a1 = 0.
    let b1 = 2.

    let a2 = 0.4
    let b2 = 1.

    let a3 = 0.
    let b3 = 0.85

    let c1 = (a1 + b1) / 2.
    let c2 = (a2 + b2) / 2.
    let c3 = (a3 + b3) / 2.

    printfn "┌────────────────────────────────────┬─────────────┬────────────┬───────────┐"
    printfn "│                 f                  │  dichotomy  │ iterations │  newthon  │"
    printfn "│────────────────────────────────────┼─────────────┼────────────┼───────────|"
    printfn "|  0.25 * x * x * x + x - 1.2502     |%10.5f   |%10.5f  |%10.5f |" (dichotomy f1 a1 b1) (iterations phi1 c1) (newthon f1 f1' c1) 
    printfn "│────────────────────────────────────┼─────────────┼────────────┼───────────|"
    printfn "| x + sqrt(x) + x ** (1. / 3.) - 2.5 |%10.5f   |%10.5f  |%10.5f |" (dichotomy f2 a2 b2) (iterations phi2 c2) (newthon f2 f2' c2)
    printfn "│────────────────────────────────────┼─────────────┼────────────┼───────────|"
    printfn "|   x - (1. / (3. + sin(3.6 * x)))   |%10.5f   |%10.5f  |%10.5f |" (dichotomy f3 a3 b3) (iterations phi3 c3) (newthon f3 f3' c3)
    printfn "└────────────────────────────────────┴─────────────┴────────────┴───────────┘"